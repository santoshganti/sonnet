services:
  openwebui:
    image: ghcr.io/open-webui/open-webui:main
    container_name: openwebui
    hostname: openwebui
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities:
                - gpu
    runtime: nvidia
    env_file:
      - .env
    environment:
      # OpenWebUI
      WEBUI_NAME: ${OPENWEBUI_WEBUI_NAME}
      WEBUI_SECRET_KEY: ${OPENWEBUI_WEBUI_SECRET_KEY}
      OPENAI_API_KEY: ${OPENWEBUI_OPENROUTER_API_KEY}

      # Postgres
      DB_DATABASE_URL: ${OPENWEBUI_DB_DATABASE_URL}

      # PgVector
      VECTOR_DB: ${OPENWEBUI_VECTOR_DB}
      PGVECTOR_DB_URL: ${OPENWEBUI_PGVECTOR_DB_URL}

      # Ollama
      OLLAMA_BASE_URL: ${OPENWEBUI_OLLAMA_BASE_URL}

      # VALKEY
      REDIS_URL: ${OPENWEBUI_VALKEY_URL}

      # SMTP
      SMTP_SERVER: ${OPENWEBUI_SMTP_SERVER}
      SMTP_PORT: ${OPENWEBUI_SMTP_PORT}
      SMTP_USERNAME: ${OPENWEBUI_SMTP_USERNAME}
      SMTP_PASSWORD: ${OPENWEBUI_SMTP_PASSWORD}
      SMTP_USE_TLS: ${OPENWEBUI_SMTP_USE_TLS}
      SMTP_FROM_EMAIL: ${OPENWEBUI_SMTP_FROM_EMAIL}
      SMTP_FROM_NAME: ${OPENWEBUI_SMTP_FROM_NAME}

      # GPU Configuration (for older Nvidia GPUs like Quadro P4000)
      # CUDA_LAUNCH_BLOCKING: ${OPENWEBUI_CUDA_LAUNCH_BLOCKING}
      # TORCH_CUDA_ARCH_LIST: ${OPENWEBUI_TORCH_CUDA_ARCH_LIST}
    networks:
      openwebui:
        ipv4_address: ${APP_IP_OPENWEBUI}
      pgvector: null
      valkey: null
    extra_hosts:
      - host.docker.internal:host-gateway
    volumes:
      - ${APPDATA}/unifi:/app/backend/data
      - ${APPSTORAGE}/shared:/app/backend/shared
      - ${APPSTORAGE}/ollama:/root/.ollama
    depends_on:
      - pgvector
      - valkey
    restart: unless-stopped

  # Ollama
  ollama:
    image: ollama/ollama:latest
    container_name: openwebui-ollama
    hostname: openwebui-ollama
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities:
                - gpu
    runtime: nvidia
    tty: true
    pull_policy: always
    env_file:
      - .env
    environment:
      OLLAMA_KEEP_ALIVE: ${OPENWEBUI_OLLAMA_KEEP_ALIVE}
    networks:
      - ollama
    ports:
      - 7869:11434
    volumes:
      - ${APPSTORAGE}/shared:/code
      - ${APPSTORAGE}/ollama:/root/.ollama
    restart: unless-stopped

  # Database: Postgres Database
  postgres:
    image: postgres:17
    container_name: openwebui-postgres
    hostname: ${OPENWEBUI_POSTGRES_HOST}
    env_file:
      - .env
    tmpfs:
      - /dev/shm:size=128m
    environment:
      POSTGRES_USER: ${OPENWEBUI_POSTGRES_USER}
      POSTGRES_PASSWORD: ${OPENWEBUI_POSTGRES_PASSWORD}
      POSTGRES_DB: ${OPENWEBUI_POSTGRES_DB}
    networks:
      - postgres
    volumes:
      - ${DATABASE}/postgres_data:/var/lib/postgresql/data
    restart: unless-stopped

  # Vector Database: pgvector Database - Enhanced performance and enterprise features
  pgvector:
    image: pgvector/pgvector:pg17
    container_name: openwebui-pgvector
    hostname: ${OPENWEBUI_PGVECTOR_HOST}
    env_file:
      - .env
    tmpfs:
      - /dev/shm:size=128m
    environment:
      POSTGRES_USER: ${OPENWEBUI_PGVECTOR_USER}
      POSTGRES_PASSWORD: ${OPENWEBUI_PGVECTOR_PASSWORD}
      POSTGRES_DB: ${OPENWEBUI_PGVECTOR_DB}
      PGVECTOR_MAX_VECTOR_LENGTH: ${OPENWEBUI_PGVECTOR_MAX_VECTOR_LENGTH}
      POSTGRES_MAX_CONNECTIONS: ${OPENWEBUI_POSTGRES_MAX_CONNECTIONS}
      PGVECTOR_CHUNK_SIZE: ${OPENWEBUI_PGVECTOR_CHUNK_SIZE}
      UVICORN_WORKERS: ${OPENWEBUI_UVICORN_WORKERS}
    networks:
      - pgvector
    volumes:
      - ${DATABASE}/pgvector_data:/var/lib/postgresql/data
    restart: unless-stopped

  # Valkey - Required for clustering and websocket support
  valkey:
    image: valkey/valkey:8
    container_name: openwebui-valkey
    hostname: ${OPENWEBUI_VALKEY_HOST}
    env_file:
      - .env
    tmpfs:
      - /dev/shm:size=128m
    networks:
      - valkey
    volumes:
      - ${DATABASE}/valkey:/data
    command: valkey-server --requirepass "${OPENWEBUI_VALKEY_PASSWORD}" --save ""
    restart: unless-stopped

  ## AUX Containers: vscode Server
  vscode:
    image: lscr.io/linuxserver/code-server:latest
    container_name: openwebui-vscode
    hostname: openwebui-vscode
    tmpfs:
      - /dev/shm:size=128m
    env_file:
      - .env
    environment:
      SUDO_PASSWORD: ${OPENWEBUI_VSCODE_SUDO_PASSWORD}
      DEFAULT_WORKSPACE: ${OPENWEBUI_VSCODE_DEFAULT_WORKSPACE}
      KEEPALIVE_INTERVAL: ${OPENWEBUI_VSCODE_KEEPALIVE_INTERVAL}
      KEEPALIVE_TIMEOUT: ${OPENWEBUI_VSCODE_KEEPALIVE_TIMEOUT}
      PROXY_DOMAIN: ${OPENWEBUI_VSCODE_PROXY_DOMAIN}
    networks:
      openwebui:
        ipv4_address: ${OPENWEBUI_VSCODE_APP_IP}
      postgres: null
      pgvector: null
      ollama: null
      valkey: null
    ports:
      - 8443:8443
    volumes:
      - ./configs/apt-cacher-ng.conf:/etc/apt/apt.conf.d/apt-cacher-ng
      - ./configs/sudo.conf:/etc/sudoers.d/sudo.conf
      - ${APPDATA_VSCODE}/config:/config
      - ${APPDATA_VSCODE}/linuxbrew:/home/linuxbrew
      - ${APPDATA_VSCODE}/flatpak:/config/.local/share/flatpak
      - ${APPDATA_VSCODE}/workspace:/config/workspace
      - ${HOME_VSCODE}/.local:/config/.local
      - ${HOME_VSCODE}/.pyenv:/config/.pyenv
      - ${HOME_VSCODE}/.ssh:/config/.ssh
      - ${HOME_VSCODE}/.nvm:/config/.nvm
      - ${APPSTORAGE}/shared:/config/workspace/shared
    depends_on:
      # - openwebui
      - ollama
      - postgres
      - pgvector
      - valkey
    restart: unless-stopped

  ## Monitoring for postgres: Adminer
  adminer:
    image: adminer:latest
    container_name: openwebui-adminer
    hostname: openwebui-adminer
    env_file:
      - .env
    networks:
      webui:
        ipv4_address: ${OPENWEBUI_ADMINER_APP_IP}
    depends_on:
      - pgvector
      - postgres
    restart: unless-stopped

  ## Monitoring for pgvector: pgAdmin for database management
  # pgadmin:
  #   image: dpage/pgadmin4:latest
  #   container_name: openwebui-pgadmin
  #   env_file:
  #     - .env
  #   networks:
  #     openwebui:
  #       ipv4_address: ${APP_IP_PGADMIN}
  #     db: null
  #   volumes:
  #     - ${APPDATA}/pgadmin_data:/var/lib/pgadmin
  #   depends_on:
  #     - pgvector
  #   restart: unless-stopped

  ## Monitoring for redis: Redis Commander for Redis management
  # redis-commander:
  #   image: rediscommander/redis-commander:latest
  #   container_name: openwebui-redis-commander
  #   hostname: openwebui-redis-commander
  #   env_file:
  #     - .env
  #   environment:
  #     REDIS_HOSTS: 'local:redis:6379:0:${REDIS_PASSWORD:-redis_secure_password}'
  #   networks:
  #     openwebui:
  #       ipv4_address: ${APP_IP_REDIS_COMMANDER}
  #     valkey: null
  #   ports:
  #     - '8081:8081'
  #   depends_on:
  #     - redis
  #   restart: unless-stopped

networks:
  postgres:
    internal: true
  pgvector:
    internal: true
  valkey:
    internal: true
  ollama:
    internal: true
  openwebui:
    name: unifi
    external: true
