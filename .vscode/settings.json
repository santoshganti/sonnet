{
  "workbench.colorTheme": "Default Dark Modern",
  "workbench.iconTheme": "vs-seti",
  "workbench.editor.defaultBinaryEditor": "default",
  "workbench.editor.enablePreviewFromQuickOpen": true,
  "workbench.startupEditor": "welcomePageInEmptyWorkbench",
  "workbench.editorAssociations": {
    "*.copilotmd": "vscode.markdown.preview.editor",
    "*.md": "default"
  },
  // Explorer
  "explorer.confirmDelete": false,
  "explorer.confirmDragAndDrop": false,
  //Editor
  "editor.fontSize": 14,
  "editor.defaultFormatter": "esbenp.prettier-vscode",
  "editor.fontFamily": "Cascadia Code",
  "editor.codeLensFontFamily": "Cascadia Code",
  "editor.inlayHints.fontFamily": "Cascadia Code",
  "editor.autoIndent": "advanced",
  "editor.tabSize": 2,
  "editor.accessibilitySupport": "off",
  "editor.tokenColorCustomizations": {
    "[*Light*]": {
      "textMateRules": [
        {
          "scope": "ref.matchtext",
          "settings": {
            "foreground": "#000"
          }
        }
      ]
    },
    "[*Dark*]": {
      "textMateRules": [
        {
          "scope": "ref.matchtext",
          "settings": {
            "foreground": "#fff"
          }
        }
      ]
    },
    "textMateRules": [
      {
        "scope": "keyword.other.dotenv",
        "settings": {
          "foreground": "#FF000000"
        }
      }
    ]
  },
  "editor.suggest.snippetsPreventQuickSuggestions": false,
  "editor.quickSuggestions": {
    "other": false,
    "comments": false,
    "strings": false
  },
  "editor.inlineSuggest.enabled": false,
  "editor.suggestOnTriggerCharacters": false,
  "editor.acceptSuggestionOnEnter": "smart",
  "editor.tabCompletion": "off",
  "editor.parameterHints.enabled": false,
  /*
    Files:
  */
  "files.autoSave": "afterDelay",
  "files.enableTrash": false,
  "files.associations": {
    "*.env": "dotenv",
    ".env*": "dotenv",
    "*.ini": "dotenv",
    "*.nmconnection": "properties",
    "*.list": "properties",
    "*.profile": "properties",
    "*.bashrc": "properties",
    "*.bash_profile": "properties",
    "*.bash_logout": "properties",
    "*.bash_aliases": "properties",
    "*.json": "jsonc",
    "compose.yaml": "dockercompose",
    "docker-compose.yaml": "dockercompose",
    "*.compose.yaml": "dockercompose",
    "*docker-compose.yml": "dockercompose",
    "*.yaml": "yaml",
    "*.yml": "yaml",
    ".prettierrc": "yaml",
    "*.md": "markdown",
    "*.sources": "ssh_config",
    "*.ssh/config": "ssh_config",
    "*.rules": "properties",
    "*/ssh/config": "ssh_config",
    "*.ssh.config": "ssh_config"
  },
  "files.exclude": {
    "**/__pycache__": true,
    "**/.cache": true,
    "**/.coverage": true,
    "**/.coverage.*": true,
    "**/.hypothesis": true,
    "**/.mypy_cache": true,
    "**/.nox": true,
    "**/.pytest_cache": true,
    "**/.ruff_cache": true,
    "**/.tox": true,
    "**/.local/share": true,
    "**/.local/state": true
  },
  // Settings Sync
  /*
      These settings are ignored in Settings Sync to prevent environment-specific
      configurations from being synced across different machines or environments.
  */
  "settingsSync.ignoredSettings": [ ],
  // Extensions
  "extensions.ignoreRecommendations": true,
  "extensions.allowed": {
    // Disabled Extensions
    "GitHub.remotehub": false,
    "ms-vscode.azure-repos": false,
    "ms-python.vscode-pylance": false,
    "ms-azuretools": false
  },
  //// GitHub Coplilot
  "inlineChat.enableV2": true,
  "github.copilot.chat.search.keywordSuggestions": true,
  "github.copilot.chat.agent.autoFix": false,
  "github.copilot.chat.followUps": "firstOnly",
  "github.copilot.renameSuggestions.triggerAutomatically": false,
  "github.copilot.chat.editor.temporalContext.enabled": true,
  "github.copilot.chat.completionContext.typescript.mode": "sidecar",
  "github.copilot.chat.localeOverride": "en",
  "github.copilot.chat.codesearch.enabled": true,
  "github.copilot.chat.agent.thinkingTool": true,
  "github.copilot.enable": { "*": false },
  "github.copilot.inlineSuggest.enable": false,
  "github.copilot.suggestionDelayMs": 999999,
  "github.copilot.editor.enableAutoCompletions": false,
  //// Notebook
  "notebook.defaultFormatter": "esbenp.prettier-vscode",
  "notebook.output.fontFamily": "Cascadia Code",
  "notebook.outline.showMarkdownHeadersOnly": false,
  "notebook.markup.fontSize": 13,
  //// Terminal
  "terminal.integrated.detectLocale": "on",
  "terminal.integrated.copyOnSelection": true,
  "terminal.integrated.defaultProfile.linux": "zsh",
  "terminal.integrated.defaultProfile.osx": "zsh",
  "terminal.integrated.mouseWheelZoom": true,
  "terminal.integrated.cursorStyle": "line",
  "terminal.integrated.fontFamily": "Cascadia Code",
  "terminal.integrated.fontSize": 13,
  //// Shell Format
  "shellformat.useEditorConfig": true,
  //// Containers
  "containers.contexts.showInStatusBar": true,
  "dev.containers.dockerSocketPath": "",
  //// Docker
  "docker.extension.enableComposeLanguageServer": true,
  "docker.contexts.showInStatusBar": true,
  "security.workspace.trust.banner": "untilDismissed",
  //// Telemtry
  "telemetry.telemetryLevel": "off",
  "redhat.telemetry.enabled": false,
  "gitlens.telemetry.enabled": false,
  "telemetry.feedback.enabled": false,
  "http.proxyStrictSSL": false,
  "http.electronFetch": true,
  "http.proxyAuthorization": null,
  /* git */
  "git.openRepositoryInParentFolders": "always",
  "git.untrackedChanges": "separate",
  "git.enableCommitSigning": true,
  "git.confirmSync": false,
  //// GitLens
  "gitlens.ai.ollama.url": "https://ollama.services.darkcatalist.com",
  /* Language Features */
  //// Python Language Settings
  "python.analysis.autoImportCompletions": true,
  "python.languageServer": "Jedi",
  "python.analysis.languageServerMode": "default",
  "python.venvPath": "$HOME/.local/share/pyzfs",
  "python.autoComplete.extraPaths": [ ],
  "python.analysis.fixAll": [ "source.unusedImports" ],
  "[python]": {
    "editor.formatOnType": false,
    "editor.defaultFormatter": "ms-python.black-formatter"
  },
  //// Ansible Language Settings
  "ansible.python.interpreterPath": "~/.local/share/pyzfs/bin/python",
  "ansibleServer.trace.server": "verbose",
  "ansible.executionEnvironment.enabled": true,
  //// Json Language Settings
  "json.format.keepLines": true,
  "[json]": {
    "editor.defaultFormatter": "vscode.json-language-features",
    "editor.formatOnSave": false
  },
  "[jsonc]": {
    "editor.defaultFormatter": "vscode.json-language-features",
    "editor.formatOnSave": false,
    "editor.formatOnSaveMode": "modifications"
  },
  //// XML Language Settings
  "[xml]": {
    "editor.defaultFormatter": "redhat.vscode-xml",
    "editor.formatOnSave": false
  },
  //// CSS Language Settings
  "[css]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.formatOnSave": false
  },
  //// YAML Language Settings
  "yaml.trace.server": "messages",
  "yaml.format.singleQuote": true,
  "yaml.maxItemsComputed": 20000,
  "yaml.schemas": {
    "https://raw.githubusercontent.com/compose-spec/compose-spec/master/schema/compose-spec.json": "docker-compose*.yml"
  },
  //// yaml
  "[yaml]": {
    "editor.insertSpaces": true,
    "editor.tabSize": 2,
    "editor.autoIndent": "advanced",
    "editor.snippets.codeActions.enabled": true,
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.formatOnSave": false
  },
  //// yaml as yml
  "[yml]": {
    "editor.insertSpaces": true,
    "editor.tabSize": 2,
    "editor.autoIndent": "advanced",
    "editor.snippets.codeActions.enabled": true,
    "editor.defaultFormatter": "redhat.vscode-yaml",
    "editor.formatOnSave": false
  },
  //// Docker Compose Language Settings
  "[dockercompose]": {
    "editor.insertSpaces": true,
    "editor.tabSize": 2,
    "editor.autoIndent": "advanced",
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.snippets.codeActions.enabled": true,
    "editor.formatOnSave": false,
    "editor.quickSuggestions": {
      "other": true,
      "comments": false,
      "strings": true
    }
  },
  //// Java Language Settings
  "[java]": {
    "editor.defaultFormatter": "redhat.java"
  },
  //// CSharp
  "[csharp]": {
    "editor.defaultFormatter": "ms-dotnettools.csharp",
    "editor.formatOnSave": false
  },
  // Helm
  "[helm]": {
    "editor.defaultFormatter": "redhat.vscode-yaml",
    "editor.formatOnSave": false
  },
  //bash
  "[shellscript]": {
    "editor.defaultFormatter": "mkhl.shfmt"
  },
  //javascript
  "[javascript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  //Markdown
  "markdown.trace.server": "messages",
  "markdown.server.log": "debug",
  "markdown.occurrencesHighlight.enabled": true,
  "markdown.preview.openMarkdownLinks": "inEditor",
  "markdown.extension.preview.autoShowPreviewToSide": false,
  "markdown.extension.print.theme": "dark",
  "markdown.extension.completion.enabled": true,
  "markdown-preview-enhanced.frontMatterRenderingOption": "code block",
  //html
  "html.format.enable": false,
  "html.format.indentInnerHtml": true,
  "window.zoomLevel": 1,
  "security.workspace.trust.untrustedFiles": "open",
}